System Overview:
Choose Cassandra DB for its features, which are well-suited to both streaming and batch-processing applications in real life. 

Here are the key advantages that impacted this choice:

1. Flexible Data Storage: Ideal for environments that must handle both streaming inputs and batch data, allowing the adjustment of the data schema.
2. High Availability and Write Performance: Essential for achieving throughput in scenarios with heavy real-time write loads.
3. Scalability: Ensures that the system can efficiently manage increasing volumes of data without any single point of failure.

Ad-Hoc Query Support: Category B

- a) List of existing domains: Retrieve all domains for which pages have been created.
- b) Pages created by a specified user: Fetch all pages created by a user identified by user_id.
- c) Article count by domain: Return the count of articles created within a specified domain.
- d) Specific page details: Provide detailed information for a page identified by page_id.
- e) User activity summary: Return the ID, name, and page creation count for users active within a specified time range.

Data Models Description:

a) pages_by_domain
- Reason: Retrieve pages by their domain, sorted by creation time in descending order.
- Primary Key: Composite of domain (partition key) and created_at (clustering key).

b) pages_by_user
- Reason: Get pages created by specific users, sorted by creation time.
- Primary Key: Combination of user_id (partition key) and created_at (clustering key).

c) The same as in a

d) page_details
- Reason: Stores details about each page to perform quick lookups by page_id.
- Primary Key: page_id.

e) user_activity
- Reason: Summarizes user activities within specified periods.
- Primary Key: Composite of user_id (partition key) and period_start (clustering key) in descending order by the start period.
